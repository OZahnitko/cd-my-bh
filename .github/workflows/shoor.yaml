name: shoor
on: push
jobs:
  # build:
  #   name: Build Image
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_REGION: ${{ secrets.AWS_REGION }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   steps:
  #     - name: Give me hash
  #       run: |
  #         echo $GITHUB_SHA
  #         echo ${{ github.event.repository.name }}
  #     - name: Create deployment
  #       run: |
  #         aws deploy create-deployment \
  #           --application-name CD-my-BH \
  #           --deployment-config-name CodeDeployDefault.OneAtATime \
  #           --deployment-group-name CD-my-BH-dg \
  #           --description "CLI Test" \
  #           --github-location repository="OZahnitko/${{ github.event.repository.name }}",commitId=$GITHUB_SHA
  build_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="ozahnitko/cd-my-bh"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: See what prep did
        run: |
          echo ${{ steps.prep.outputs.tagged_image }}
          echo ${{ steps.prep.outputs.tag }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Hub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.build-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  aws_deployment:
    name: Create AWS Codedeploy Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Dummy step
        run: |
          echo And here is where I will do a deployment.
